{"name":"Codeigniter-blacklist-library","tagline":"A simple blacklist library for Codeigniter （CI黑名单过滤库）","body":"# Blacklist\r\n\r\nVersion 1.0\r\n\r\n* Author: [Yang Hu](http://www.cnsaturn.com/), aka. Saturn\r\n\r\nOriginal thoughts borrowed from a framework called [egp](http://code.google.com/p/egp/) .\r\n\r\n## DESCRIPTION\r\n\r\nThis is a simple blacklist library written for CodeIgniter 1.7.x and the to-be-released CI 2.0. \r\n\r\nIf you are googling a solution ONLY for preventing your app from spam blood, I STRONGLY recommend you using Wordpress Akismet service instead of this library. However, if you'd like to take full control of your blacklist dictionary, i.e., your application requires Internet censorship capabilities, you can consider this library.\r\n\r\n## FEATURES\r\n\r\n1. IP-address filtering.  \r\n2. Keyword-based string filtering\r\n3. Regex-based string filtering\r\n\r\n## INSTALLATION\r\n\r\n####  CodeIgniter\r\n\r\n1.  Put Blacklist.php into your application/libraries folder\r\n2.  Put blacklist.php into your application/config folder\r\n3.  Load it like normal: $this->load->library('blacklist'); OR you can autoload it.\r\n\r\n####  For other framework or app\r\n\r\nDive into the code, you can find that it can be easily migrated to other apps without making hands dirty.\r\n\r\n## Usage\r\n\r\nCheck if the given text block contains forbidden keywords (return TRUE if it does exist, otherwise, return FALSE):\r\n\r\n$this->blacklist->check_text('I am a spammer!')->is_blocked();\r\n\r\nCheck if the client IP is blocked by the system (return TRUE if it is blocked) :\r\n\r\n$this->blacklist->check_ip('1.1.1.1')->is_blocked();\r\n\r\nIf a forbidden keyword (such as word 'spammer') was found in the given text block, we can do the following replacement:\r\n\r\n$this->blacklist->replace('I am a spammer!', '@'); \r\n\r\nAfter this, The original text will be turned into 'I am a @@@@@@@!'","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}